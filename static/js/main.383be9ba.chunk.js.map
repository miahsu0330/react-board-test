{"version":3,"sources":["components/App/App.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","Message","author","time","children","ErrorMassage","Loading","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","document","getElementById"],"mappings":"imDAIA,IAGMA,EAAOC,IAAOC,IAAV,KAMJC,EAAQF,IAAOG,GAAV,KACLC,EAAcJ,IAAOK,KAAV,KACXC,EAAkBN,IAAOO,SAAV,KAKfC,EAAeR,IAAOS,OAAV,KACZC,EAAcV,IAAOC,IAAV,KAIXU,EAAmBX,IAAOC,IAAV,KAMhBW,EAAcZ,IAAOC,IAAV,KAKXY,EAAgBb,IAAOC,IAAV,KACba,EAAcd,IAAOC,IAAV,KACXc,EAAcf,IAAOC,IAAV,KAEjB,SAASe,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/B,OACE,eAACR,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBI,IAChB,cAACH,EAAD,UAAcI,OAEhB,cAACH,EAAD,UAAcI,OAKpB,IAAMC,EAAepB,IAAOC,IAAV,KAGZoB,EAAUrB,IAAOC,IAAV,KAmHEqB,MA5Ff,WAAgB,IAAD,EACmBC,mBAAS,MAD5B,mBACNC,EADM,KACIC,EADJ,OAEiCF,mBAAS,MAF1C,mBAENG,EAFM,KAEWC,EAFX,OAGaJ,qBAHb,mBAGNK,EAHM,KAGCC,EAHD,OAImCN,mBAAS,MAJ5C,mBAINO,EAJM,KAIYC,EAJZ,OAK2CR,oBAAS,GALpD,mBAKNS,EALM,KAKgBC,EALhB,KAOPC,EAAgB,WACpB,OAAOC,MAjFT,2EAkFKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,EAAYc,MAEbC,OAAM,SAACC,GACNd,EAAmBc,EAAIC,aA2C7B,OAJAC,qBAAU,WACRT,MACC,IAGD,eAACnC,EAAD,WACGiC,GAAwB,cAACX,EAAD,0BACzB,cAACnB,EAAD,iCACA,eAACE,EAAD,CAAawC,SAvCQ,SAACC,GACxBA,EAAEC,iBACEd,IAGJC,GAAwB,GACxBE,MAAM,8CAA+C,CACnDY,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,QACVH,KAAMrB,MAGPQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACW,IAAZA,EAAKc,IACPtB,EAAoBQ,EAAKG,SAE3BR,IACAL,EAAS,IACTI,GAAwB,MAEzBO,OAAM,SAACC,GACNV,EAAoBU,EAAIC,SACxBT,GAAwB,QAY1B,UACE,cAAC3B,EAAD,CAAiBsB,MAAOA,EAAO0B,SA5CR,SAACT,GAC5BhB,EAASgB,EAAEU,OAAO3B,UA4Cd,cAACpB,EAAD,uCACCsB,GACC,eAACV,EAAD,mCACwBU,EAAiB0B,iBAI5C9B,GACC,eAACN,EAAD,mCACwBM,EAAgB8B,cAGzChC,GAAgC,IAApBA,EAASiC,QAAgB,6CACtC,cAAC/C,EAAD,UACGc,GACCA,EAASkC,KAAI,SAAChB,GAAD,OACX,cAAC1B,EAAD,CAEEC,OAAQyB,EAAQU,SAChBlC,KAAM,IAAIyC,KAAKjB,EAAQkB,WAAWC,iBAHpC,SAKGnB,EAAQO,MAJJP,EAAQoB,aC1J3BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.383be9ba.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 500px;\n  margin: 0 auto;\n  border: 1px solid #f5f5f5;\n`;\n\nconst Title = styled.h1``;\nconst MessageForm = styled.form``;\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n  margin: 5px;\n`;\nconst SubmitButton = styled.button``;\nconst MessageList = styled.div`\n  border-top: 1px solid #333;\n  margin-top: 20px;\n`;\nconst MessageContainer = styled.div`\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #f5f5f5;\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  aligin-items: center;\n`;\n\nconst MessageAuthor = styled.div``;\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div``;\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nconst ErrorMassage = styled.div`\n  color: red;\n`;\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: #fff;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n`;\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.string,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState(null);\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n\n  const fetchMessages = () => {\n    return fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data);\n      })\n      .catch((err) => {\n        setMessageApiError(err.message);\n      });\n  };\n\n  const handleTextareaChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (isLoadingPostMessage) {\n      return;\n    }\n    setIsLoadingPostMessage(true);\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"hello\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n        }\n        fetchMessages();\n        setValue(\"\");\n        setIsLoadingPostMessage(false);\n      })\n      .catch((err) => {\n        setPostMessageError(err.message);\n        setIsLoadingPostMessage(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading....</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea value={value} onChange={handleTextareaChange} />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMassage>\n            Somthing went wrong. {postMessageError.toString()}\n          </ErrorMassage>\n        )}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMassage>\n          Somthing went wrong. {messageApiError.toString()}\n        </ErrorMassage>\n      )}\n      {messages && messages.length === 0 && <div>no message</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n\n//https://student-json-api.lidemy.me\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}